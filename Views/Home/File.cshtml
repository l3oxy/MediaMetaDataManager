@model DirectoryModel;
@using System.IO;
@using MediaMetaDataManager.MetaData;
@{
    ViewData["Title"] = "File";
}

<div class="text-center">
    Current Directory: [<code><a asp-action="Directory">@Model?.CurrentDirectory?.FullName</a></code>]
    @{
        if (Model is null)
        {
            return;
        }
        
        Microsoft.Extensions.Primitives.StringValues ids;
        if  (
                Context.Request.Query.TryGetValue("id", out ids)
                &&
                ids.Count == 1
                &&
                !String.IsNullOrWhiteSpace(ids[0])
            )
        {
            FileInfo fileRequested = new(System.IO.Path.Combine(Model.CurrentDirectory.FullName, ids[0])); // This gives warning because could be empty, but relax because literally checking for that in the above IF.
            <div>File: 
                [@if (fileRequested.Exists)
                        {<code class="font-monospace text-success">@fileRequested.Name</code>}
                else
                        {<code class="font-monospace text-danger">@fileRequested.Name</code>}]
            </div>
            
            <div>Exists: 
                [@if (fileRequested.Exists)
                        {<code class="text-success">True ✅</code>}
                else
                        {<code class="text-danger">False ❌</code>}]
            </div>

            <div>
                @if (fileRequested.Exists)
                {
                    bool metaDataProgram_IsAccessible = MetaDataProgram.MetaDataProgramCheck();

                    <div>@MetaDataProgram.FileName: 
                        @if (metaDataProgram_IsAccessible)
                                {<span>[<code class="text-success">True ✅</code>]</span>}
                        else
                                {<span>[<code class="text-danger">False ❌</code>]
                                <div>Failed to access <code class="bg-dark">@MetaDataProgram.FileName</code>. 
                                Please see <a href="https://github.com/l3oxy/MediaMetaDataManager" target="_blank">the documentation</a> for instructions to resolve.</div>
                                </span>}
                    </div>

                    if (metaDataProgram_IsAccessible)
                    {
                        MediaMetaDataManager.MetaData.MetaDataProgramOutput fileMetaData = MetaDataProgram.GetInfo(fileRequested);

                        if (fileMetaData.SuccessfullyRead)
                        {
                            <div><div>Output info: </div><div style="min-height: 1.625em" class="border font-monospace">@{try{<pre>@fileMetaData.StandardError</pre><br /><pre>@fileMetaData.StandardOutput</pre>}catch{}}</div></div>
                            {
                                <form asp-action="FileChange" method="post" style="display: inline">
                                <table class="table table-dark table-striped table-bordered table-hover">
                                    <thead>
                                        <tr><th scope="col" colspan="3">MetaData</th></tr>
                                        <tr><th scope="col">Name</th> <th scope="col">Current Value</th> <th scope="col">New Value</th></tr>
                                    </thead>
                                    <tbody>@{
                                            if (fileMetaData.Frames.Count == 0) 
                                            {
                                                {<div>No metadata found on this file.</div>}
                                            }
                                            else
                                            {
                                                // Check for pre-existing values.
                                                string? TIT2;
                                                fileMetaData.Frames.TryGetValue(nameof(TIT2), out TIT2);
                                                string? TPE1;
                                                fileMetaData.Frames.TryGetValue(nameof(TPE1), out TPE1);
                                                string? COMM;
                                                fileMetaData.Frames.TryGetValue(nameof(COMM), out COMM);
                                                {
                                                    <input id="filePath" name="filePath" type="text" value="@fileRequested" />

                                                    <tr>
                                                        <td>
                                                            <label for="TIT2">TIT2 / Title</label>
                                                        </td>
                                                        <td>
                                                            <input id="TIT2-old" class="metaDataFrame_old" type="text" value="@TIT2" readonly="readonly" />
                                                        </td>
                                                        <td>
                                                            <input id="TIT2" name="TIT2" type="text" value="@TIT2" />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <label for="TPE1">TPE1 / Artist</label>
                                                        </td>
                                                        <td>
                                                            <input id="TPE1-old" class="metaDataFrame_old" type="text" value="@TPE1" readonly="readonly" />
                                                        </td>
                                                        <td>
                                                            <input id="TPE1" name="TPE1" type="text" value="@TPE1" />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td>
                                                            <label for="COMM">COMM / Comment</label>
                                                        </td>
                                                        <td>
                                                            <input id="COMM-old" class="metaDataFrame_old" type="text" value="@COMM" readonly="readonly" />
                                                        </td>
                                                        <td>
                                                            <input id="COMM" name="COMM" type="text" value="@COMM" />
                                                        </td>
                                                    </tr>

                                                    <input type="submit" value="Submit" />
                                                }
                                            }
                                    }</tbody>
                                </table>
                                </form>
                            }
                        }
                        else
                        {
                            <div>
                                <div class="text-danger">Failed to get metadata for file.</div>
                                <div>Exit code (if any): <code class="border font-monospace text-danger">@{try{<span>@fileMetaData.ExitCode</span>}catch{}}</code></div>
                                <div>
                                    <form action="#" method="post">
                                        <div style="display: inline-block; width: 49%">Output info (if any): </div>
                                        <div style="display: inline-block; width: 49%; min-height: 1.625em" class="border font-monospace">@{try{<pre>@fileMetaData.StandardOutput</pre>}catch{}}</div>
                                    </form>
                                </div>
                                <div>
                                    <div style="display: inline-block; width: 49%">Error info (if any): </div>
                                    <div style="display: inline-block; width: 49%; min-height: 1.625em" class="border font-monospace text-danger">@{try{<pre>@fileMetaData.StandardError</pre>}catch{}}</div></div>
                            </div>
                        }


                    }

                }
            </div>
        }
    }
</div>
