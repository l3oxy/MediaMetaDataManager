@model DirectoryModel;
@using System.IO;
@{
    ViewData["Title"] = "Files";
}

<div class="text-center">
    Current Directory: [<code><a asp-action="Directory">@Model?.CurrentDirectory?.FullName</a></code>]
    @{
        if (Model is null)
        {
            return;
        }
        Microsoft.Extensions.Primitives.StringValues ids;
        if  (
                Context.Request.Query.TryGetValue("id", out ids)
                &&
                ids.Count == 1
                &&
                !String.IsNullOrWhiteSpace(ids[0])
            )
        {
            FileInfo fileRequested = new(System.IO.Path.Combine(Model.CurrentDirectory.FullName, ids[0]));
            <div>File: 
                [@if (fileRequested.Exists)
                        {<code class="font-monospace text-success">@fileRequested.Name</code>}
                else
                        {<code class="font-monospace text-danger">@fileRequested.Name</code>}]
            </div>
            
            <div>Exists: 
                [@if (fileRequested.Exists)
                        {<code class="text-success">True ✅</code>}
                else
                        {<code class="text-danger">False ❌</code>}]
            </div>

            <div>
                @if (fileRequested.Exists)
                {
                    // check if mid3v is accessible
                    System.Diagnostics.Process proc = new System.Diagnostics.Process();
                    proc.EnableRaisingEvents = false;
                    proc.StartInfo.FileName = "mid3v2xxx";
                    proc.StartInfo.Arguments = "--version";
                    bool mid3v2_IsAccessible = false;
                    try 
                    {
                        proc.Start();
                        if (!proc.WaitForExit(2000))
                        {
                            proc.Kill(true);
                        }
                        mid3v2_IsAccessible = (proc.ExitCode == 0);
                    } 
                    catch 
                    {
                        // oh well, we tried
                    }
                    

                    <div>mid3v2: 
                        @if (mid3v2_IsAccessible)
                                {<span>[<code class="text-success">True ✅</code>]</span>}
                        else
                                {<span>[<code class="text-danger">False ❌</code>]
                                <div>Failed to access <code class="bg-dark">@proc.StartInfo.FileName</code>. 
                                Please see <a href="https://github.com/l3oxy/MediaMetaDataManager" target="_blank">the documentation</a> for instructions to resolve.</div>
                                </span>}
                    </div>

                    if (mid3v2_IsAccessible)
                    {

                    }

                    // read song name, output to page
                    // read artist name, output to page
                    // read vid-id/remark (whatever it's called), output to screen
                    // check if file is writable
                    // have edit buttons or text fields to enable changing song or artist
                }
            </div>
        }
        else
        {
            var files = Model.CurrentDirectory.EnumerateFiles();
            if (files is not null && files.Count() >= 1)
            {
                {<table class="table table-dark table-striped table-bordered table-hover">
                    <thead>
                        <tr><th scope="col">Filename</th></tr>
                    </thead>
                    <tbody>@{
                            foreach (FileInfo file in files)
                            {
                                {<tr><td><code><a asp-action="Files" asp-route-id=@file.Name>@file.Name</a></code></td></tr>}
                            }
                    }</tbody>
                </table>}
            }
        }
    }
</div>
